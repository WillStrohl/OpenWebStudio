{"Name":"Tree","ConfigurationID":"12554860-9380-8f39-cb8d-7aa6b98bea2e","searchItems":[],"queryItems":[],"listItems":[],"messageItems":[{"Index":1,"Level":0,"Parameters":{"Name":"Default Variables","RenderType":"0","skipDebug":"false","includeSearch":"false","includeExport":"False","includeImport":"False"},"ActionType":"Action-Region","ChildActions":[{"Index":2,"Level":0,"Parameters":{"VariableType":"<QueryString>","VariableDataType":"Number","Formatters":"","QuerySource":"node","QueryTarget":"@node","QueryTargetLeft":"'","QueryTargetRight":"'","QueryTargetEmpty":"NULL","EscapeListX":"0","Protected":"true","EscapeHTML":"true"},"ActionType":"Template-Variable","ChildActions":[]}]},{"Index":3,"Level":0,"Parameters":{"Name":"Templates / Queries and Layouts","RenderType":"0","skipDebug":"false","includeSearch":"false","includeExport":"False","includeImport":"False"},"ActionType":"Action-Region","ChildActions":[{"Index":4,"Level":0,"Parameters":{"Type":"&lt;Action&gt;","Name":"LIST","Value":"IF @node is null\n\tSELECT \tCategoryID as Node, \n\t\tParentCategoryID as ParentNode, \n\t\tCategoryName as Name, \n\t\tCASE WHEN EXISTS(Select top 1 cc.CategoryID from Content_Category cc where cc.ParentCategoryID=Content_Category.CategoryID) THEN 1 ELSE 0 END Expandable \n\tfrom Content_Category Where ParentCategoryID is NULL\n\torder by sequence\nELSE\n\tSelect \tCategoryID as Node, \n\t\tParentCategoryID as ParentNode, \n\t\tCategoryName as Name, \n\t\tCASE WHEN EXISTS(Select top 1 cc.CategoryID from Content_Category cc where cc.ParentCategoryID=Content_Category.CategoryID) THEN 1 ELSE 0 END Expandable \n\t from Content_Category where ParentCategoryID=@node\n\t order by sequence","SkipProcessing":"true","AssignmentType":"0"},"ActionType":"Action-Assignment","ChildActions":[]},{"Index":5,"Level":0,"Parameters":{"Type":"&lt;Action&gt;","Name":"GET","Value":"IF @node is null\n\tSelect * from Content_Category where ParentCategoryID=@node\nELSE\n\tSelect * from Content_Category where ParentCategoryID is null","SkipProcessing":"true","AssignmentType":"0"},"ActionType":"Action-Assignment","ChildActions":[]},{"Index":6,"Level":0,"Parameters":{"Type":"&lt;Action&gt;","Name":"SET","Value":"IF @node is null\nBEGIN\n\tINSERT INTO Content_Category(CategoryName,ContentSourceID,ParentCategoryID,isDefault,Level,Sequence,TabID,CategoryPath)\n\tVALUES (@CategoryName,@ContentSourceID,@ParentCategoryID,@isDefault,@Level,@Sequence,@TabID,@CategoryPath)\n\tSELECT SCOPE_IDENTITY() Node\nEND\nELSE\nBEGIN\n\tUPDATE Content_Category Set \n\t\tCategoryName=@CategoryName,ContentSourceID=@ContentSourceID,ParentCategoryID=@ParentCategoryID,isDefault=@isDefault,Level=@Level,Sequence=@Sequence,TabID=@TabID,CategoryPath=@CategoryPath\n\tWHERE CategoryID=@CategoryID\n\tSELECT @node Node\nEND","SkipProcessing":"true","AssignmentType":"0"},"ActionType":"Action-Assignment","ChildActions":[]},{"Index":7,"Level":0,"Parameters":{"Type":"&lt;Action&gt;","Name":"DROP","Value":"CREATE TABLE #tmp(delID int identity(1,1),Node int)\nINSERT INTO #tmp(Node) Values (@node)\nWHILE EXISTS(Select top 1 CategoryID from Content_Category where ParentCategoryID in (Select Node from #tmp) and not CategoryID in (Select Node from #tmp))\nBEGIN\n\tINSERT INTO #tmp(Node)\n\tSelect CategoryID from Content_Category where ParentCategoryID in (Select Node from #tmp) and not CategoryID in (Select Node from #tmp)\nEND\ndeclare @dnode int\nselect top 1 @dnode=Node from #tmp order by delID desc\nWHILE not @dnode is null\nBEGIN\n\tDELETE FROM Content_Category where CategoryID=@dnode\n\tDELETE FROM #tmp where Node=@dnode\n\tset @dnode = null\n\tselect top 1 @dnode=Node from #tmp order by delID desc\nEND\nDROP TABLE #tmp","SkipProcessing":"true","AssignmentType":"0"},"ActionType":"Action-Assignment","ChildActions":[]},{"Index":8,"Level":0,"Parameters":{"Value":"FOR TABS INSTEAD"},"ActionType":"Action-Comment","ChildActions":[]},{"Index":9,"Level":0,"Parameters":{"Type":"&lt;Action&gt;","Name":"LIST","Value":"IF @node is null\n\tSELECT \tTabID as Node, \n\t\tParentID as ParentNode, \n\t\tTabName as Name, \n\t\tCASE WHEN EXISTS(Select top 1 cc.TabID from Tabs cc where cc.ParentID=Tabs.TabID) THEN 1 ELSE 0 END Expandable \n\tfrom Tabs Where ParentID is NULL\nELSE\n\tSELECT \tTabID as Node, \n\t\tParentID as ParentNode, \n\t\tTabName as Name, \n\t\tCASE WHEN EXISTS(Select top 1 cc.TabID from Tabs cc where cc.ParentID=Tabs.TabID) THEN 1 ELSE 0 END Expandable \n\t from Tabs where ParentID=@node","SkipProcessing":"true","AssignmentType":"0"},"ActionType":"Action-Assignment","ChildActions":[]},{"Index":10,"Level":0,"Parameters":{"Type":"&lt;Action&gt;","Name":"GET","Value":"IF @node is null\n\tSelect * from Tabs where ParentID=@node\nELSE\n\tSelect * from Tabs ParentID is null","SkipProcessing":"true","AssignmentType":"0"},"ActionType":"Action-Assignment","ChildActions":[]}]},{"Index":11,"Level":0,"Parameters":{"Name":"Runtime Events","RenderType":"0","skipDebug":"false","includeSearch":"false","includeExport":"False","includeImport":"False"},"ActionType":"Action-Region","ChildActions":[{"Index":12,"Level":0,"Parameters":{"LeftCondition":"'[|cmd,q]'","RightCondition":"'add'","Operator":"=","IsAdvanced":"False"},"ActionType":"Condition-If","ChildActions":[]},{"Index":13,"Level":0,"Parameters":{"LeftCondition":"'[|cmd,q]'","RightCondition":"'edit'","Operator":"=","IsAdvanced":"False"},"ActionType":"Condition-ElseIf","ChildActions":[]},{"Index":14,"Level":0,"Parameters":{"LeftCondition":"'[|cmd,q]'","RightCondition":"'save'","Operator":"=","IsAdvanced":"False"},"ActionType":"Condition-ElseIf","ChildActions":[]},{"Index":15,"Level":0,"Parameters":{"LeftCondition":"'[|cmd,q]'","RightCondition":"'delete'","Operator":"=","IsAdvanced":"False"},"ActionType":"Condition-ElseIf","ChildActions":[]},{"Index":16,"Level":0,"Parameters":{"LeftCondition":"'[|cmd,q]'","RightCondition":"'gest'","Operator":"=","IsAdvanced":"False"},"ActionType":"Condition-ElseIf","ChildActions":[{"Index":17,"Level":0,"Parameters":{"Type":"Query-Query","GroupStatement":"","GroupIndex":"","Value":"[LIST,A]","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]},{"Index":18,"Level":0,"Parameters":{"Type":"Group-Header","GroupStatement":"","GroupIndex":"","Value":"<span><script type=\"text/javascript\">\ntreeObj.handle({\"cmd\":\"get\",\"node\":[|COALESCE,node,q:number,\" \",text,{TRIM},{ENCODEJAVASCRIPT}],\"Nodes\":[]}","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]},{"Index":19,"Level":0,"Parameters":{"Type":"Group-Footer","GroupStatement":"","GroupIndex":"","Value":");</script>","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]}]},{"Index":20,"Level":0,"Parameters":{"LeftCondition":"'[|cmd,q]'","RightCondition":"'get'","Operator":"=","IsAdvanced":"False"},"ActionType":"Condition-ElseIf","ChildActions":[{"Index":21,"Level":0,"Parameters":{"Type":"Query-Query","GroupStatement":"","GroupIndex":"","Value":"[LIST,A]","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]},{"Index":22,"Level":0,"Parameters":{"Type":"Group-Header","GroupStatement":"","GroupIndex":"","Value":"<script type=\"text/javascript\">\ntreeObj.handle(\\{\"cmd\":\"get\",\"node\":[|COALESCE,node,q:number,\" \",text,{TRIM},{ENCODEJAVASCRIPT}],\"nodes\":\\[false","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[{"Index":23,"Level":0,"Parameters":{"Type":"Detail-Detail","GroupStatement":"","GroupIndex":"","Value":",\\{\"node\":\"[node]\",\"parent\":\"[parentnode]\",\"name\":[|COALESCE,name,,\" \",text,{TRIM},{ENCODEJAVASCRIPT}],\"ex\":\"[expandable]\"\\}","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]}]},{"Index":24,"Level":0,"Parameters":{"Type":"Group-Footer","GroupStatement":"","GroupIndex":"","Value":"\\]\\});</script>","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]}]},{"Index":25,"Level":0,"Parameters":{},"ActionType":"Condition-Else","ChildActions":[{"Index":26,"Level":0,"Parameters":{"Type":"Detail-NoResults","GroupStatement":"","GroupIndex":"","Value":"<script type=\"text/javascript\" src=\"/DesktopModules/OWS/Scripts/OWS.Tree.js\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/DesktopModules/OWS/Scripts/OWS.Tree.css\" />\n\n<input type=\"hidden\" name=\"frmTaxonomy\" id=\"frmTaxonomy\" value=\"1,5,6\"/>\n\n<div id=\"rslt[ModuleID,System]\" style=\"display:none;\"></div>\n<div id=\"tco\">\n</div>\n<script type=\"text/javascript\">\nvar treeObj = new treeClass('treeObj','tco','frmTaxonomy','rslt[ModuleID,System]');\ntreeObj.init('[ModuleID,System]',true);\n</script>\n","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]},{"Index":27,"Level":0,"Parameters":{"Type":"Group-Header","GroupStatement":"","GroupIndex":"","Value":"<script type=\"text/javascript\" src=\"/DesktopModules/OWS/Scripts/OWS.Tree.js\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/DesktopModules/OWS/Scripts/OWS.Tree.css\" />\n<script type=\"text/javascript\" src=\"/js/jquery/ui/ui.core.js\"></script> \t\t\n<script type=\"text/javascript\" src=\"/js/jquery/ui/ui.sortable.js\"></script>\n<input type=\"hidden\" name=\"frmTaxonomy\" id=\"frmTaxonomy\" value=\"1,5,6\"/>\n<input type=\"hidden\" name=\"frmPrimaryTaxonomy\" id=\"frmPrimaryTaxonomy\" value=\"5\"/>\n<script type=\"text/javascript\">\nvar primaryNode=false;\nvar primaryNodeValue='';\nvar treeChecks = new Array();\nvar treeCheckKeys = new Array();\nfunction onTreeChecks(node,text,checked)\n{\n\tvar pchecked = false;\n\tif (typeof checked == 'undefined')\n\t{ checked = true; pchecked = true; }\n\n\tvar elem = {\"id\":node,\"text\":text,\"checked\":checked};\n\tvar i= treeCheckKeys.indexOf(node+'');\n\n\tif (pchecked)\n\t{\n\t\tif (i<0)\n\t\t{\n\t\t\telem.checked=false;\n\t\t}\n\n\t\tvar removed = new Array();\n\t\tfor (var xi=0;xi<treeChecks.length;xi++)\n\t\t{\n\t\t\tif (treeChecks[xi].checked==false && treeChecks[xi].id != primaryNodeValue)\n\t\t\t\tremoved.push(treeChecks[xi].id+'');\n\t\t}\n\t\tfor (var xi=0;xi<removed.length;xi++)\n\t\t{\n\t\t\tvar xii = treeCheckKeys.indexOf(removed[xi]+'');\n\t\t\tif (xii>-1)\n\t\t\t{\n\t\t\t\ttreeChecks.remove(xii); \n\t\t\t\ttreeCheckKeys.remove(xii);\n\t\t\t}\t\n\t\t}\n\t}\n\n\tif (i>-1 && checked==false && node!=primaryNodeValue)\n\t{\n\t\ttreeChecks.remove(i); \n\t\ttreeCheckKeys.remove(i);\n\t}\n\telse\n\t{\n\t\tif (i==-1 && checked==true)\n\t\t{\n\t\t\ttreeChecks.push(elem); \n\t\t\ttreeCheckKeys.push(node+'');\n\t\t}\n\t}\n\trenderTreeChecks();\t\t\n}\nfunction renderTreeChecks()\n{\n\tvar s = new Array();\n\tfor (var i=0;i<treeChecks.length;i++)\n\t{\n\t\tif (treeChecks[i].id==primaryNodeValue)\n\t\t{\n\t\t\ts=s.insert(0,'<div class=\"pcategory\">'+treeChecks[i].text+'</div>');\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts.push('<div class=\"category\">'+treeChecks[i].text+'</div>');\n\t\t}\n\t}\n\tdocument.getElementById('divCategories').innerHTML = s.join('');\n}\nfunction TreePrimary(obj,node)\n{\n\tif (primaryNode)\n\t{\n\t\tprimaryNode.src='/images/fwd.gif';\n\t}\n\tprimaryNode=obj;\n\tprimaryNode.src='/images/rec.gif';\n\tprimaryNodeValue=node;\n\tdocument.getElementById('frmPrimaryTaxonomy').value = node;\n\n\tvar text = document.getElementById('tcon'+node).innerHTML;\n\tdocument.getElementById('primaryDisplay').innerHTML = text;\n\tonTreeChecks(node,text);\t\n}\nfunction isTreePrimary(obj,node)\n{\n\tobj.onload=null;\n \tif (node==document.getElementById('frmPrimaryTaxonomy').value)\n\t{\n\t\tprimaryNode=obj;\n\t\tobj.src='/images/rec.gif';\n\t}\n\telse\n\t{\n\t\tobj.src='/images/fwd.gif';\n\t}\n}\nfunction TreeCheck(node,text,checked)\n{\nonTreeChecks(node,text,checked);\n}\n</script>\n<div id=\"divCategories\"></div>\n<div id=\"primaryDisplay\"></div>\n<div id=\"rslt[ModuleID,System]\" style=\"display:none;\"></div>\n<div id=\"tco\">\n</div>\n<script type=\"text/javascript\">\n//###TREECLASS### ###NODE### ###ID###\nvar treeObj = new treeClass('treeObj','tco','frmTaxonomy','rslt[ModuleID,System]',{'onCheck':function(node,text,ischecked){TreeCheck(node,text,ischecked);},'list':'<img src=\"/images/spacer.gif\" onload=\"isTreePrimary(this,###NODE###);\" onclick=\"TreePrimary(this,###NODE###);\">###CHECK###'});\ntreeObj.init('[ModuleID,System]',true);\n</script>\n<script type=\"text/javascript\">\ntreeObj.handle(\\{\"cmd\":\"get\",\"node\":[|COALESCE,node,q:number,\" \",text,{TRIM},{ENCODEJAVASCRIPT}],\"nodes\":\\[false","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[{"Index":28,"Level":0,"Parameters":{"Type":"Detail-Detail","GroupStatement":"","GroupIndex":"","Value":",\\{\"node\":\"[node]\",\"parent\":\"[parentnode]\",\"name\":[|COALESCE,name,,\" \",text,{TRIM},{ENCODEJAVASCRIPT}],\"ex\":\"[expandable]\"\\}","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]}]},{"Index":29,"Level":0,"Parameters":{"Type":"Group-Footer","GroupStatement":"","GroupIndex":"","Value":"\\]\\});\n\n$(\"div.item span\").hover(function(){\n\thighlight($(this),true);\n});\n$(\"div.item span\").mouseleave(function(){\n\thighlight($(this),false);\n});\n\nfunction highlight(jqo,lhighlight)\n{\n\tif (lhighlight==false)\n\t\tjqo.css(\"color\",\"#000\").animate({\"opacity\":\"1.0\",\"color\":\"#000000\"},1500);\n\telse\n\t\tjqo.css(\"color\",\"#f00\").animate({\"opacity\":\"0.4\",\"color\":\"#ff0000\"},1500);\n}\n\n</script>\n","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]},{"Index":30,"Level":0,"Parameters":{"Type":"Query-Query","GroupStatement":"","GroupIndex":"","Value":"[LIST,A]","Connection":"","Filter":"","CacheTime":"","CacheName":"","CacheShared":"false"},"ActionType":"Template","ChildActions":[]}]}]}],"recordsPerPage":"0","enableAlphaFilter":"false","enablePageSelection":"false","enableRecordsPerPage":"false","enableCustomPaging":"false","enableExcelExport":false,"enableHide_OnNoQuery":false,"enableHide_OnNoResults":false,"enableAdvancedParsing":true,"enableCompoundIIFConditions":"true","enableQueryDebug":"false","enableQueryDebug_Edit":"false","enableQueryDebug_Admin":"false","enableQueryDebug_Super":"false","enableQueryDebug_Log":false,"enableQueryDebug_ErrorLog":false,"autoRefreshInterval":"","skipRedirectActions":"false","skipSubqueryDebugging":"false","enableAdmin_Edit":true,"enableAdmin_Admin":false,"enableAdmin_Super":false,"BotRecordCount":0,"BotPageVariableName":null,"enableBotShowAllRecords":false,"enableBotDetection":false,"BotNonAjaxText":null,"disableOpenScript":false,"enableSilverlight":false,"enableAJAX":"false","enableAJAXPaging":"false","enableAJAXCustomPaging":"false","enableAJAXCustomStatus":"false","enableAJAXPageHistory":"false","customAJAXPageHistory":"","enableAJAXManual":"false","includeJavascriptUtilities":"false","includeJavascriptValidation":"false","javascriptInclude":[],"javascriptOnComplete":"","enableMultipleColumnSorting":"false","ModuleCommunicationMessageType":"","showAll":"true","useExplicitSystemVariables":"false","enabledForcedQuerySplit":"false","query":"","filter":"","customConnection":"","listItem":"","listAItem":"","defaultItem":"","noqueryItem":"","SearchQuery":"","SearchTitle":"","SearchLink":"","SearchAuthor":"","SearchDate":"","SearchKey":"","SearchContent":"","SearchDescription":"","Header":null,"Footer":null,"Title":null,"Version":"20"}